function [ ] = animate_simulation(s_input, s_mobility, output) %output is link_output of get_links
%ANIMATE_SIMULATION Summary of this function goes here
%   Detailed explanation goes here
    v_t = 0:s_input.TIME_STEPs_input.SIMULATION_TIME;


    figure;
    hold on;
    text_handles = zeros(1,s_mobility.NB_NODES);
    for nodeIndex = 1:s_mobility.NB_NODES-2
        vh_node_pos(nodeIndex) = plot(output(nodeIndex).v_x(1),output(nodeIndex).v_y(1),'*','color',[0.3 0.3 1]);
%         text_handles(nodeIndex) = text(output(nodeIndex).v_x(1) + x_label_offset ,output(nodeIndex).v_y(1),num2str(nodeIndex));
    end
    
    vh_node_pos(s_mobility.NB_NODES - 1) = plot(output(s_mobility.NB_NODES - 1).v_x(1),output(s_mobility.NB_NODES - 1).v_y(1),'*','color',[1 0 0]);
    vh_node_pos(s_mobility.NB_NODES) = plot(output(s_mobility.NB_NODES).v_x(1),output(s_mobility.NB_NODES).v_y(1),'*','color',[1 0 0]);
    
    
    title(cat(2,'Simulation time (sec): ',num2str(s_mobility.SIMULATION_TIME)));
    xlabel('X (meters)');
    ylabel('Y (meters)');
    title('Radom Waypoint mobility');
    ht = text(min(output(1).v_x),max(output(1).v_y),cat(2,'Time (sec) = 0'));
    %axis([min(output(1).v_x) max(output(1).v_x) min(output(1).v_y) max(output(1).v_y)]);
    axis([s_input.V_POSITION_X_INTERVAL(1) s_input.V_POSITION_X_INTERVAL(2) s_input.V_POSITION_Y_INTERVAL(1) s_input.V_POSITION_Y_INTERVAL(2)])
    hold off;
    for timeIndex = 1:length(v_t);
        t = v_t(timeIndex);
        set(ht,'String',cat(2,'Time (sec) = ',num2str(t,4)));
        for nodeIndex = 1:s_mobility.NB_NODES
            set(vh_node_pos(nodeIndex),'XData',output(nodeIndex).v_x(timeIndex),'YData',output(nodeIndex).v_y(timeIndex));
%             set(text_handles(nodeIndex),'Position',[output(nodeIndex).v_x(timeIndex) + x_label_offset,output(nodeIndex).v_y(timeIndex),0])
        end
        drawnow;
    end

end

